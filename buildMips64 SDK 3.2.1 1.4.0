#!/bin/bash
# Сборка прошивки для плат esr200, esr1000

# Необходимо доставить пакеты

  sudo apt-get install libglib2.0-dev flex bison make automake libtool cmake build-essential pkg-config gawk
# Также понадобится пакет для сборки мультиобраза:

  sudo apt-get install uboot-mkimage(или u-boot-tools) 
# Также понадобится пакет для компиляции защищенных образов:

  sudo apt-get install libssl-dev
# Также понадобится для 64-разрядных систем:

  sudo apt-get install libc6-dev-i386 g++-multilib
# Для валидации XML-файлов clish при сборке нужен xmllint:

  sudo apt-get install libxml2-utils
# В ubuntu 14.04 также необходимо устанавливать lib32z1 и lib32z1-dev

# Ссылка sh должна указывать на bash. Сначала проверим, запустив команду
  ll /bin | grep sh
# -rwxr-xr-x 1 root root 920788 Mar 29 2013 bash*
# -rwxr-xr-x 1 root root 100284 Mar 30 2012 dash*
# lrwxrwxrwx 1 root root 4 Mar 29 2013 rbash -> bash*
# lrwxrwxrwx 1 root root 4 Feb 13 11:51 sh -> dash*
# lrwxrwxrwx 1 root root 4 Feb 12 13:59 sh.distrib -> dash*
# lrwxrwxrwx 1 root root 7 Nov 17 2012 static-sh -> busybox*

# Как видим, sh указывает на dash. Это можно испрпавить следующим образом.
# Разлинковать имеющуюся ссылку командой: sudo unlink /bin/sh
# Создать новую ссылку: 

  sudo ln -s bash ./sh # (эту команду нужно выполнять, находясь в папке /bin)
# Проверяем:
  ll /bin | grep sh
# -rwxr-xr-x 1 root root 920788 Mar 29 2013 bash*
# -rwxr-xr-x 1 root root 100284 Mar 30 2012 dash*
# lrwxrwxrwx 1 root root 4 Mar 29 2013 rbash -> bash*
# lrwxrwxrwx 1 root root 4 Feb 13 11:51 sh -> bash*
# lrwxrwxrwx 1 root root 4 Feb 12 13:59 sh.distrib -> dash*
# lrwxrwxrwx 1 root root 7 Nov 17 2012 static-sh -> busybox*

# Подобным образом, нужно добавить и ссылку gmake:
# /bin/gmake -> /usr/bin/make
  sudo ln -s /usr/bin/make /bin/gmake
  
  BRANCH=""         # наша ветка

  git clone --branch=${BRANCH} --depth=1 -- $USER@swlabsrv:/var/SVNrepo/git_repo/npu/broadcom/toolchains_bin ~/toolchains_bin
  sudo mkdir -p /opt/broadcom-sdk-3.2.1 
  sudo ln -s -t /opt/broadcom-sdk-3.2.1 ~/toolchains_bin

  export PATH=$PATH:/opt/broadcom-sdk-3.2.1/toolchains_bin/mipscross/linux/bin
  export PATH=$PATH:/opt/broadcom-sdk-3.2.1/toolchains_bin/mipscross/elf/bin

  ADDR=""   # задать что клонируем
  git clone --branch=1.4.0 ${ADDR}

  ./prepare_working_copy.sh
# Дальнейшая сборка происходит из директории sdk-base/buildroot:

  cd sdk-base/buildroot
# Конфигурирование платы:

  make config-esr1000
# Сборка проектов

  make sysconfig              #(требуется выполнить хотя бы раз, пересборка sysconfig не требуется часто)
  make linux-userspace        # (сoбuрает ядро и модули ядра)

  make apps-all
  make apps-fs

  make fs                     # (подготавливает файловую систему и пересобирает ядро вместе с ней)

########## Запуск прошивки на плате ##########

# Устанавливаем minicom:

  sudo apt-get install minicom
# Запускаем minicom:

  minicom -D /dev/ttyUSB0
  
# Настраиваем параметры (Ctrl-A Z O), порт указываем свой:

# +-----------------------------------------------------------------------+
# | A -    Serial Device      : /dev/ttyUSB0                                |
# | B - Lockfile Location     : /var/lock                                 |
# | C -   Callin Program      :                                           |
# | D -  Callout Program      :                                           |
# | E -    Bps/Par/Bits       : 115200 8N1                                |
# | F - Hardware Flow Control : No                                        |
# | G - Software Flow Control : No                                        |
# |                                                                       |
# |    Change which setting?                                              |
# +-----------------------------------------------------------------------+

# Если все хорошо и порт выбран верно, то после старта платы, мы увидим сначала загрузку x-loader, затем u-boot.
# Чтобы остановить загрузку ядра, нужно нажать любую клавишу.

# Мы должны увидеть приглашение командной строки u-boot:

setenv serverip 10.100.100.1          # задаем ип сервера
setenv ipaddr 10.100.100.2            # задаем ип маршрутизатора(платы и тд)
saveenv                               # сохраняем наши настройки
  
  
